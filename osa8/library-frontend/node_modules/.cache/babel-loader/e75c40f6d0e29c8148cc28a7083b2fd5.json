{"ast":null,"code":"var _jsxFileName = \"/home/mazeero/FullStackOpen-2020/osa8/library-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloClient, HttpLink, InMemoryCache, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: 'http://localhost:4000'\n  })\n});\nconst query = gql`\n  query {\n   allBooks  {\n       title\n      }\n    \n  }\n`;\nclient.query({\n  query\n}).then(response => {\n  console.log(response.data);\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/home/mazeero/FullStackOpen-2020/osa8/library-frontend/src/index.js"],"names":["React","ReactDOM","App","ApolloClient","HttpLink","InMemoryCache","gql","client","cache","link","uri","query","then","response","console","log","data","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,aAAjC,EAAgDC,GAAhD,QAA2D,gBAA3D;;AAGA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC5BK,EAAAA,KAAK,EAAE,IAAIH,aAAJ,EADqB;AAE5BI,EAAAA,IAAI,EAAE,IAAIL,QAAJ,CAAa;AACjBM,IAAAA,GAAG,EAAE;AADY,GAAb;AAFsB,CAAjB,CAAf;AAQA,MAAMC,KAAK,GAAGL,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAUAC,MAAM,CAACI,KAAP,CAAa;AAAEA,EAAAA;AAAF,CAAb,EACGC,IADH,CACSC,QAAD,IAAc;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD,CAHH;AASAf,QAAQ,CAACgB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ApolloClient, HttpLink, InMemoryCache, gql } from '@apollo/client'\n\n\nconst client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link: new HttpLink({\n      uri: 'http://localhost:4000',\n    })\n  })\n\n\nconst query = gql`\n  query {\n   allBooks  {\n       title\n      }\n    \n  }\n`\n\n\nclient.query({ query })\n  .then((response) => {\n    console.log(response.data)\n  })\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}