{"ast":null,"code":"var _jsxFileName = \"/home/mazeero/FullStackOpen-2020/osa8/library-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      bookCount\n      born\n    }\n  }\n`;\nconst ALL_BOOKS = gql`\n  query {\n    allBooks {\n      title\n      author\n      published\n    }\n  }\n`;\n\nconst App = () => {\n  _s();\n\n  const [page, setPage] = useState('authors');\n  const result = useQuery(ALL_AUTHORS);\n  const result2 = useQuery(ALL_BOOKS);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('authors'),\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('books'),\n        children: \"books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('add'),\n        children: \"add book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Authors, {\n      show: page === 'authors',\n      authors: result.loading ? [] : result.data.allAuthors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Books, {\n      show: page === 'books',\n      books: result2.loading ? [] : result2.data.allBooks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewBook, {\n      show: page === 'add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DuY0CKjP8WppPbAHj3y/zHsFcxM=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mazeero/FullStackOpen-2020/osa8/library-frontend/src/App.js"],"names":["React","useState","Authors","Books","NewBook","gql","useQuery","ALL_AUTHORS","ALL_BOOKS","App","page","setPage","result","result2","loading","data","allAuthors","allBooks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;AAEA,MAAMC,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASA,MAAMG,SAAS,GAAGH,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,SAAD,CAAhC;AAGA,QAAMW,MAAM,GAAGN,QAAQ,CAACC,WAAD,CAAvB;AACA,QAAMM,OAAO,GAAGP,QAAQ,CAACE,SAAD,CAAxB;AAIA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMG,OAAO,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,OAAD;AACE,MAAA,IAAI,EAAED,IAAI,KAAK,SADjB;AAEE,MAAA,OAAO,EAAEE,MAAM,CAACE,OAAP,GAAiB,EAAjB,GAAsBF,MAAM,CAACG,IAAP,CAAYC;AAF7C;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEN,IAAI,KAAK,OADjB;AAEE,MAAA,KAAK,EAAIG,OAAO,CAACC,OAAR,GAAkB,EAAlB,GAAsBD,OAAO,CAACE,IAAR,CAAaE;AAF9C;AAAA;AAAA;AAAA;AAAA,YAZF,eAiBE,QAAC,OAAD;AACE,MAAA,IAAI,EAAEP,IAAI,KAAK;AADjB;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAjCD;;GAAMD,G;UAIWH,Q,EACCA,Q;;;KALZG,G;AAmCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport { gql, useQuery } from '@apollo/client'\n\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      bookCount\n      born\n    }\n  }\n`\nconst ALL_BOOKS = gql`\n  query {\n    allBooks {\n      title\n      author\n      published\n    }\n  }\n`\n\nconst App = () => {\n  const [page, setPage] = useState('authors')\n\n\n  const result = useQuery(ALL_AUTHORS)\n  const result2 = useQuery(ALL_BOOKS)\n\n\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setPage('authors')}>authors</button>\n        <button onClick={() => setPage('books')}>books</button>\n        <button onClick={() => setPage('add')}>add book</button>\n      </div>\n\n      <Authors\n        show={page === 'authors'}\n        authors={result.loading ? [] : result.data.allAuthors}\n      />\n\n      <Books\n        show={page === 'books'}\n        books = {result2.loading ? [] :result2.data.allBooks}\n      />\n\n      <NewBook\n        show={page === 'add'}\n      />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}