{"ast":null,"code":"var _jsxFileName = \"/home/mazeero/FullStackOpen-2020/osa8/library-frontend/src/components/Recommend.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { CURRENT_USER } from '../queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recommend = ({\n  show,\n  books\n}) => {\n  _s();\n\n  const result = useQuery(CURRENT_USER);\n  const favoriteGenre = result.data.me.favoriteGenre;\n  const booksToShow = books.filter(b => b.genres.includes(favoriteGenre));\n\n  if (!show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), booksToShow.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: a.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: a.author.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: a.published\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this)]\n    }, a.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Recommend, \"JqpwbFFyOF6wIHaj5E6obYHTpSg=\", false, function () {\n  return [useQuery];\n});\n\n_c = Recommend;\nexport default Recommend;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommend\");","map":{"version":3,"sources":["/home/mazeero/FullStackOpen-2020/osa8/library-frontend/src/components/Recommend.js"],"names":["React","useQuery","CURRENT_USER","Recommend","show","books","result","favoriteGenre","data","me","booksToShow","filter","b","genres","includes","map","a","title","author","name","published"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,YAA7B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAAA;;AACnC,QAAMC,MAAM,GAAGL,QAAQ,CAACC,YAAD,CAAvB;AACA,QAAMK,aAAa,GAAID,MAAM,CAACE,IAAP,CAAYC,EAAZ,CAAeF,aAAtC;AAEA,QAAMG,WAAW,GAAIL,KAAK,CAACM,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,MAAF,CAASC,QAAT,CAAkBP,aAAlB,CAAlB,CAArB;;AAEA,MAAI,CAACH,IAAL,EAAW;AACP,WAAO,IAAP;AACD;;AAEH,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAECM,WAAW,CAACK,GAAZ,CAAgBC,CAAC,iBACd;AAAA,8BACE;AAAA,kBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKD,CAAC,CAACE,MAAF,CAASC;AAAd;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAKH,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAASJ,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA,YADH,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAtBD;;GAAMd,S;UACaF,Q;;;KADbE,S;AAwBN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { CURRENT_USER } from '../queries'\n\nconst Recommend = ({ show, books }) => {\n    const result = useQuery(CURRENT_USER)\n    const favoriteGenre =  result.data.me.favoriteGenre\n\n    const booksToShow =  books.filter(b => b.genres.includes(favoriteGenre))\n\n    if (!show) {\n        return null\n      }\n\n    return (\n        <div>\n        <h1>Recommendations</h1>\n        {booksToShow.map(a =>\n            <tr key={a.title}>\n              <td>{a.title}</td>\n              <td>{a.author.name}</td>\n              <td>{a.published}</td>\n            </tr>\n          )}\n        </div>\n    )\n}\n\nexport default Recommend\n"]},"metadata":{},"sourceType":"module"}