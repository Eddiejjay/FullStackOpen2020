{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const EDIT_AUTHOR = gql`\nmutation EditAuthor($name: String, $setBornTo: Int) {\n  editAuthor(name: $name, setBornTo: $setBornTo) {\n    name\n    bookCount\n    born\n  }\n}\n  `;\nexport const ADD_BOOK = gql`\nmutation Mutation($title: String!, $published: Int!, $author: String!, $genres: [String!]!) {\n  addBook(title: $title, published: $published, author: $author, genres: $genres) {\n    title\n    published\n    author {\n      name\n      bookCount\n      born\n    }\n    genres\n    id\n  }\n}\n\n`;\nexport const LOGIN = gql`\nmutation Login($username: String!, $password: String!) {\n  login(username: $username, password: $password) {\n    value\n  }\n}\n\n`;\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      bookCount\n      born\n    }\n  }\n`;\nexport const ALL_BOOKS = gql`\n  query {\n    allBooks {\n      title\n      published\n      author {\n        name\n        born\n      }\n      genres\n      id\n    }\n  }\n`;","map":{"version":3,"sources":["/home/mazeero/FullStackOpen-2020/osa8/library-frontend/src/queries.js"],"names":["gql","EDIT_AUTHOR","ADD_BOOK","LOGIN","ALL_AUTHORS","ALL_BOOKS"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARO;AAaP,OAAO,MAAME,QAAQ,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP,OAAO,MAAMG,KAAK,GAAGH,GAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAPO;AASP,OAAO,MAAMI,WAAW,GAAGJ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;AASP,OAAO,MAAMK,SAAS,GAAGL,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbO","sourcesContent":["import { gql } from '@apollo/client'\n\nexport const EDIT_AUTHOR = gql`\nmutation EditAuthor($name: String, $setBornTo: Int) {\n  editAuthor(name: $name, setBornTo: $setBornTo) {\n    name\n    bookCount\n    born\n  }\n}\n  `\n\n\n\n\nexport const ADD_BOOK = gql`\nmutation Mutation($title: String!, $published: Int!, $author: String!, $genres: [String!]!) {\n  addBook(title: $title, published: $published, author: $author, genres: $genres) {\n    title\n    published\n    author {\n      name\n      bookCount\n      born\n    }\n    genres\n    id\n  }\n}\n\n`\n\nexport const LOGIN = gql `\nmutation Login($username: String!, $password: String!) {\n  login(username: $username, password: $password) {\n    value\n  }\n}\n\n`\n\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      bookCount\n      born\n    }\n  }\n`\nexport const ALL_BOOKS = gql`\n  query {\n    allBooks {\n      title\n      published\n      author {\n        name\n        born\n      }\n      genres\n      id\n    }\n  }\n`"]},"metadata":{},"sourceType":"module"}