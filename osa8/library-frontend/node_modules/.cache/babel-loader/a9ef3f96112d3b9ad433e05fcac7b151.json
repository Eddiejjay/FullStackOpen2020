{"ast":null,"code":"var _jsxFileName = \"/home/mazeero/FullStackOpen-2020/osa8/library-frontend/src/components/NewBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_BOOK = gql`\nmutation addBook($title: String!, $published: Int!, $author: String!, $genres: [String!]!) {\n  addBook(\n    title: $title,\n    published: $published,\n    author: $author,\n    genres: $genres\n  ) {\n    title\n    published\n    author\n    id \n    genres\n    }\n  }\n\n`;\n\nconst NewBook = props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [published, setPublished] = useState('');\n  const [genre, setGenre] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [addBook] = useMutation(ADD_BOOK);\n\n  if (!props.show) {\n    return null;\n  }\n\n  const submit = async event => {\n    event.preventDefault();\n    addBook({\n      variables: {\n        title,\n        author,\n        published,\n        genres\n      }\n    });\n    console.log('add book...');\n    setTitle('');\n    setPublished('');\n    setAuthor('');\n    setGenres([]);\n    setGenre('');\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: ({\n            target\n          }) => setTitle(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"author\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: author,\n          onChange: ({\n            target\n          }) => setAuthor(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"published\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: published,\n          onChange: ({\n            target\n          }) => setPublished(parseInt(target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: genre,\n          onChange: ({\n            target\n          }) => setGenre(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addGenre,\n          type: \"button\",\n          children: \"add genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"genres: \", genres.join(' ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"create book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewBook, \"mmDJdQvo3qq7L2TB1X2cn/cw9w4=\", false, function () {\n  return [useMutation];\n});\n\n_c = NewBook;\nexport default NewBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewBook\");","map":{"version":3,"sources":["/home/mazeero/FullStackOpen-2020/osa8/library-frontend/src/components/NewBook.js"],"names":["React","useState","gql","useMutation","ADD_BOOK","NewBook","props","title","setTitle","author","setAuthor","published","setPublished","genre","setGenre","genres","setGenres","addBook","show","submit","event","preventDefault","variables","console","log","addGenre","concat","target","value","parseInt","join"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { gql, useMutation } from '@apollo/client'\n\nconst ADD_BOOK = gql`\nmutation addBook($title: String!, $published: Int!, $author: String!, $genres: [String!]!) {\n  addBook(\n    title: $title,\n    published: $published,\n    author: $author,\n    genres: $genres\n  ) {\n    title\n    published\n    author\n    id \n    genres\n    }\n  }\n\n`\n\nconst NewBook = (props) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [published, setPublished] = useState('')\n  const [genre, setGenre] = useState('')\n  const [genres, setGenres] = useState([])\n  const [ addBook ] = useMutation(ADD_BOOK)\n\n  if (!props.show) {\n    return null\n  }\n\n  const submit = async (event) => {\n    event.preventDefault()\n    addBook({  variables: {title ,author, published, genres } })\n\n    console.log('add book...')\n\n    setTitle('')\n    setPublished('')\n    setAuthor('')\n    setGenres([])\n    setGenre('')\n  }\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre))\n    setGenre('')\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          title\n          <input\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n          <input\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          published\n          <input\n            type='number'\n            value={published}\n            onChange={({ target }) => setPublished(parseInt(target.value))}\n          />\n        </div>\n        <div>\n          <input\n            value={genre}\n            onChange={({ target }) => setGenre(target.value)}\n          />\n          <button onClick={addGenre} type=\"button\">add genre</button>\n        </div>\n        <div>\n          genres: {genres.join(' ')}\n        </div>\n        <button type='submit'>create book</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBook\n"]},"metadata":{},"sourceType":"module"}