{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const EDIT_AUTHOR = gql`\n  mutation editAuthor($name: String!, $setBornTo: Int!) {\n    editAuthor(name: $name, setBornTo: $setBornTo) {\n      name\n      born\n      bookCount\n    }\n  }\n  `;\nexport const ADD_BOOK = gql`\nmutation addBook($title: String!, $published: Int!, $author: String!, $genres: [String!]!) {\n  addBook(\n    title: $title,\n    published: $published,\n    author: $author,\n    genres: $genres\n  ) {\n    title\n    published\n    author\n    id \n    genres\n    }\n  }\n\n`;\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      bookCount\n      born\n    }\n  }\n`;\nexport const ALL_BOOKS = gql`\nquery allBooks($author: String, $genre: String) {\n  allBooks(author: $author, genre: $genre)  {\n    id\n    title\n    published\n    author {\n      name\n      born\n    }\n    genres\n  }\n}`;","map":{"version":3,"sources":["/home/mazeero/FullStackOpen-2020/osa8/library-frontend/src/queries.js"],"names":["gql","EDIT_AUTHOR","ADD_BOOK","ALL_AUTHORS","ALL_BOOKS"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARO;AAUP,OAAO,MAAME,QAAQ,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBO;AAkBP,OAAO,MAAMG,WAAW,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;AASP,OAAO,MAAMI,SAAS,GAAGJ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAZO","sourcesContent":["import { gql } from '@apollo/client'\n\nexport const EDIT_AUTHOR = gql`\n  mutation editAuthor($name: String!, $setBornTo: Int!) {\n    editAuthor(name: $name, setBornTo: $setBornTo) {\n      name\n      born\n      bookCount\n    }\n  }\n  `\n\nexport const ADD_BOOK = gql`\nmutation addBook($title: String!, $published: Int!, $author: String!, $genres: [String!]!) {\n  addBook(\n    title: $title,\n    published: $published,\n    author: $author,\n    genres: $genres\n  ) {\n    title\n    published\n    author\n    id \n    genres\n    }\n  }\n\n`\n\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      bookCount\n      born\n    }\n  }\n`\nexport const ALL_BOOKS = gql`\nquery allBooks($author: String, $genre: String) {\n  allBooks(author: $author, genre: $genre)  {\n    id\n    title\n    published\n    author {\n      name\n      born\n    }\n    genres\n  }\n}`\n"]},"metadata":{},"sourceType":"module"}