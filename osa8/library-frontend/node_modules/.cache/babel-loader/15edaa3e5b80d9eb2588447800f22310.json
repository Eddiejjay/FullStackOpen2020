{"ast":null,"code":"var _jsxFileName = \"/home/mazeero/FullStackOpen-2020/osa8/library-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloClient, HttpLink, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { setContext } from 'apollo-link-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem('phonenumbers-user-token');\n  console.log('token indexistä', token);\n  return {\n    headers: { ...headers,\n      authorization: token ? `bearer ${token}` : null\n    }\n  };\n});\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4000'\n});\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/home/mazeero/FullStackOpen-2020/osa8/library-frontend/src/index.js"],"names":["React","ReactDOM","App","ApolloClient","HttpLink","InMemoryCache","ApolloProvider","setContext","authLink","_","headers","token","localStorage","getItem","console","log","authorization","httpLink","uri","client","cache","link","concat","render","document","getElementById"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,aAAjC,EAAgDC,cAAhD,QAAsE,gBAAtE;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,QAAQ,GAAGD,UAAU,CAAC,CAACE,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,yBAArB,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,KAA/B;AACA,SAAO;AACLD,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPM,MAAAA,aAAa,EAAEL,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFpC;AADJ,GAAP;AAMD,CAT0B,CAA3B;AAWA,MAAMM,QAAQ,GAAG,IAAIb,QAAJ,CAAa;AAAEc,EAAAA,GAAG,EAAE;AAAP,CAAb,CAAjB;AAGA,MAAMC,MAAM,GAAG,IAAIhB,YAAJ,CAAiB;AAC9BiB,EAAAA,KAAK,EAAE,IAAIf,aAAJ,EADuB;AAE9BgB,EAAAA,IAAI,EAAEb,QAAQ,CAACc,MAAT,CAAgBL,QAAhB;AAFwB,CAAjB,CAAf;AAMAhB,QAAQ,CAACsB,MAAT,eACE,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["\n  \nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ApolloClient, HttpLink, InMemoryCache, ApolloProvider } from '@apollo/client'\nimport { setContext } from 'apollo-link-context'\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('phonenumbers-user-token')\n  console.log('token indexistä', token)\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    }\n  }\n})\n\nconst httpLink = new HttpLink({ uri: 'http://localhost:4000' })\n\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n})\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}