[{"/home/mazeero/FullStackOpen-2020/osa2/singlepageapp/src/index.js":"1","/home/mazeero/FullStackOpen-2020/osa2/singlepageapp/src/App.js":"2","/home/mazeero/FullStackOpen-2020/osa2/singlepageapp/src/reportWebVitals.js":"3","/home/mazeero/FullStackOpen-2020/osa2/singlepageapp/src/components/Note.js":"4","/home/mazeero/FullStackOpen-2020/osa2/singlepageapp/src/services/notes.js":"5"},{"size":687,"mtime":1614880217732,"results":"6","hashOfConfig":"7"},{"size":2005,"mtime":1614777384759,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611402533240,"results":"9","hashOfConfig":"7"},{"size":303,"mtime":1614880512636,"results":"10","hashOfConfig":"7"},{"size":544,"mtime":1614757012437,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"5s1ok9",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},"/home/mazeero/FullStackOpen-2020/osa2/singlepageapp/src/index.js",["25"],"/home/mazeero/FullStackOpen-2020/osa2/singlepageapp/src/App.js",["26"],"\nimport Note from './components/Note'\nimport axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\n    'a new note...')\n    const [showAll, setShowAll] = useState(true) \n\n\n    useEffect(() => {\n      console.log('effect')\n\n      noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n        })\n    }, [])\n    console.log('render', notes.length, 'notes')\n\n\n\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    \n    }\n  \n    noteService\n    .create(noteObject)\n    .then(initialNotes => {\n      setNotes(initialNotes)\n      setNewNote('')\n    })\n\n  }\n\n\n\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      \n  }\n\n  \n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important === true)\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>      \n      <ul>\n        {notesToShow.map(note => \n          <Note key={note.id} \n          note={note}\n          toggleImportance = {()=> toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n\n      <form onSubmit={addNote}>\n      <input value={newNote} \n      onChange={handleNoteChange}\n      />\n        <button type=\"submit\">save</button>\n      </form>   \n    </div>\n  )\n}\n\nexport default App ",["27","28"],"/home/mazeero/FullStackOpen-2020/osa2/singlepageapp/src/reportWebVitals.js",[],"/home/mazeero/FullStackOpen-2020/osa2/singlepageapp/src/components/Note.js",[],"/home/mazeero/FullStackOpen-2020/osa2/singlepageapp/src/services/notes.js",["29"],"import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update \n}",{"ruleId":"30","severity":1,"message":"31","line":6,"column":8,"nodeType":"32","messageId":"33","endLine":6,"endColumn":13},{"ruleId":"30","severity":1,"message":"31","line":3,"column":8,"nodeType":"32","messageId":"33","endLine":3,"endColumn":13},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":19,"column":1,"nodeType":"40","endLine":23,"endColumn":2},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["41"],"no-negated-in-lhs",["42"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]