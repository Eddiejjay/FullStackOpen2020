[{"/home/mazeero/FullStackOpen-2020/osa2/puhelinluettelo/src/index.js":"1","/home/mazeero/FullStackOpen-2020/osa2/puhelinluettelo/src/App.js":"2","/home/mazeero/FullStackOpen-2020/osa2/puhelinluettelo/src/reportWebVitals.js":"3","/home/mazeero/FullStackOpen-2020/osa2/puhelinluettelo/src/service/bookservice.js":"4"},{"size":500,"mtime":1612206661891,"results":"5","hashOfConfig":"6"},{"size":5864,"mtime":1616156078474,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1612192713186,"results":"8","hashOfConfig":"6"},{"size":591,"mtime":1615405403460,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"wifo68",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"/home/mazeero/FullStackOpen-2020/osa2/puhelinluettelo/src/index.js",[],["22","23"],"/home/mazeero/FullStackOpen-2020/osa2/puhelinluettelo/src/App.js",["24","25"],"\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport bookservice from './service/bookservice'\n\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n      return null\n  }\n  return (\n      <div className=\"message\">{message}</div>\n  )\n}\n\n\n\nconst ErrorNotification = ({ errorMessage}) => {\n  if (errorMessage === null) {\n      return null\n  }\n  return (\n      <div className=\"error\">{errorMessage}</div>\n  )\n}\n\n\n\n\n\nconst Person = (props)=> {\n\n\nreturn (\n  <li>{props.person.name} {props.person.number}\n  <button onClick ={props.handleDeleteClick}> delete </button>\n  </li>\n)\n\n}\n\n\nconst Show = (props) => {\n  \n\n  const show = props.searchText === '' \n  ? props.persons\n  : props.persons.filter(person=>person.name.toLowerCase().includes(props.searchText.toLowerCase()))\n\n\n  return (\n    <div>\n    <ul>{show.map((person) =>\n      <Person key = {person.name} person = {person} handleDeleteClick = {() => props.handleDeleteClick(person.id, person.name)} />\n      )}\n      \n    </ul>\n\n    </div>\n  )\n  \n}\n\nconst Filter = (props) => (\n  <div> \n        filter shown with <input\n        value = {props.searchText}\n        onChange = {props.handleSearchTextChange}\n        />\n      </div>\n\n)\n\n\n\nconst AddPerson = (props) => {\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const person = {\n      name:props.newName,\n      number:props.newNumber\n    }\n\n    let personX = props.persons.find(person => person.name === props.newName)\n    let changedPerson = {...personX, number:props.newNumber}\n\n    \n    if (props.persons.find(person => person.name === props.newName)){\n      if(window.confirm(`${props.newName} is already added to phonebook, replace the old number with a new one?`)){\n    \n    bookservice\n    .redo(personX.id,changedPerson)\n      .then(returnedPerson => {\n        props.setPersons(props.persons.map(person=> person.id !== returnedPerson.id?person:returnedPerson))\n        props.setNewName('') \n        props.setNewNumber('')\n        props.setMessage(\n        `Changed number ${person.name}`\n      )\n      setTimeout(() => {\n        props.setMessage(null)\n      }, 3000)\n    })\n      .catch(error => { \n        props.setErrorMessage(\n          `Information of ${person.name} has already been removed from server`\n          ) \n           setTimeout(() => {\n        props.setErrorMessage(null)\n      }, 3000)\n    })\n  }\n      \n  props.setNewName('')\n  props.setNewNumber('')\n  \n    }else {\n      \n      bookservice\n      .create(person)\n      .then(newPerson => {\n        props.setPersons(props.persons.concat(newPerson))\n        props.setPersons(props.persons.concat(person))\n        props.setNewName('')\n        props.setNewNumber('')\n        props.setMessage(\n         `Added ${person.name}`\n       )\n       setTimeout(() => {\n         props.setMessage(null)\n       }, 3000)\n      }) .catch(error => {\n        props.setErrorMessage(JSON.stringify(error.response.data))\n        console.log(JSON.stringify(error.response.data))\n         setTimeout(() => {\n         props.setErrorMessage(null)\n       }, 3000)\n      })\n  }}\n\nreturn (\n<div>\n  \n  <form onSubmit ={addPerson}>\n        \n  <div>\n    name: <input \n    value={props.newName}\n    onChange={props.handleNameChange} />\n\n  </div>\n\n\n  <div>\n    number: <input \n    value={props.newNumber}\n    onChange={props.handleNumberChange}/>\n  \n  </div>\n  <div>\n    <button type=\"submit\" >add</button>\n  </div>\n\n\n</form>\n</div>\n\n)\n\n}\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [searchText, setSearchText] = useState('')\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\nuseEffect(() => {\nconsole.log('efekti alkaa')\nbookservice\n.getAll()\n.then(persons => {\n  setPersons(persons)\n})\n\n} , [] )\n\n\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchTextChange = (event) => {\n    console.log(event.target.value)\n    setSearchText(event.target.value)\n  }\n\n  const handleDeleteClick = (id, name) => {\n    let result = window.confirm(`Delete ${name}?`)\n\n    if (result === true ){\n    bookservice\n    .remove(id)\n    setPersons(persons.filter(person => person.id !== id))\n   console.log(id) \n  setMessage(`Deleted ${name}`)\n  setTimeout(() => {\n    setMessage(null)\n  }, 3000)\n  \n  \n  }\n\n     else {\n    return\n   }\n  }\n\n  const checkNameBook = (newName) => {\n\n  if   (persons.some(person => person.name === newName)) {\n    window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n  }\nelse {\n  console.log('jee')} \n\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <ErrorNotification  errorMessage={errorMessage}/>\n\n      <Filter searchText = {searchText} handleSearchTextChange = {handleSearchTextChange}/>\n\n      <h1>add new </h1>\n      \n      <AddPerson \n        newName = {newName} newNumber ={newNumber} \n        setNewName ={setNewName} setNewNumber = {setNewNumber}\n        persons = {persons} handleNameChange = {handleNameChange} \n        handleNumberChange = {handleNumberChange} handleSearchTextChange = {handleSearchTextChange} \n        setPersons = {setPersons} \n        searchText = {searchText}\n        checkNameBook = {checkNameBook}\n        setMessage = {setMessage}\n        message = {message}\n        setErrorMessage = {setErrorMessage}\n        errorMessage = {errorMessage}\n       />\n        \n      <h2>Numbers</h2>\n\n      <Show persons = {persons} searchText={searchText}  handleDeleteClick = {handleDeleteClick} /> \n      \n\n    </div>\n  )\n\n}\n\nexport default App","/home/mazeero/FullStackOpen-2020/osa2/puhelinluettelo/src/reportWebVitals.js",[],"/home/mazeero/FullStackOpen-2020/osa2/puhelinluettelo/src/service/bookservice.js",["26","27"],"\nimport axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data) \n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl,newObject)\n    return request.then(response => response.data) \n}\n\nconst remove = (id) => {\nconst request = axios.delete(`${baseUrl}/${id}`)\n\n}\n\nconst redo = (id, newObject) => { \n     const request = axios.put(`${baseUrl}/${id}`, newObject)\n     return request.then(response => response.data)\n\n}\n\n\n\n\nexport default {getAll, create, remove, redo}\n",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":3,"column":8,"nodeType":"36","messageId":"37","endLine":3,"endColumn":13},{"ruleId":"38","severity":1,"message":"39","line":121,"column":7,"nodeType":"40","messageId":"41","endLine":134,"endColumn":16,"fix":"42"},{"ruleId":"34","severity":1,"message":"43","line":16,"column":7,"nodeType":"36","messageId":"37","endLine":16,"endColumn":14},{"ruleId":"44","severity":1,"message":"45","line":29,"column":1,"nodeType":"46","endLine":29,"endColumn":46},{"ruleId":"30","replacedBy":"47"},{"ruleId":"32","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"51","text":"52"},"'request' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["49"],["50"],"no-global-assign","no-unsafe-negation",[2850,2852],"."]